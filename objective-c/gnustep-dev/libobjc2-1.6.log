Wed Mar  2 16:11:26 EST 2016
This is gnustep-make 2.6.2. Type 'make print-gnustep-make-help' for help.
Making all for library libobjc...
 Compiling file abi_version.c ...
 Compiling file alias_table.c ...
 Compiling file block_to_imp.c ...
block_to_imp.c:37:10: warning: implicit declaration of function 'asprintf' is invalid in C99 [-Wimplicit-function-declaration]
        if (0 > asprintf(&tmpPattern, "%s/objc_trampolinesXXXXXXXXXXX", tmp))
                ^
1 warning generated.
 Compiling file caps.c ...
 Compiling file category_loader.c ...
 Compiling file class_table.c ...
 Compiling file dtable.c ...
 Compiling file eh_personality.c ...
In file included from eh_personality.c:4:
./dwarf_eh.h:160:8: warning: case value not in enumerated type 'enum dwarf_data_encoding' [-Wswitch]
                case DW_EH_PE_absptr:
                     ^
1 warning generated.
 Compiling file encoding2.c ...
 Compiling file gc_none.c ...
 Compiling file hash_table.c ...
 Compiling file hooks.c ...
 Compiling file ivar.c ...
 Compiling file loader.c ...
 Compiling file protocol.c ...
 Compiling file runtime.c ...
 Compiling file sarray2.c ...
 Compiling file selector_table.c ...
 Compiling file sendmsg2.c ...
 Compiling file statics_loader.c ...
 Compiling file toydispatch.c ...
 Compiling file legacy_malloc.c ...
 Compiling file NSBlocks.m ...
clang: error: unknown argument: '-fexec-charset=UTF-8'
make[3]: *** [obj/libobjc.obj/NSBlocks.m.o] Error 1
make[2]: *** [internal-library-all_] Error 2
make[1]: *** [libobjc.all.library.variables] Error 2
make: *** [internal-all] Error 2
This is gnustep-make 2.6.2. Type 'make print-gnustep-make-help' for help.
Making all for library libobjc...
 Compiling file NSBlocks.m ...
 Compiling file Protocol2.m ...
 Compiling file arc.m ...
arc.m: In function ‘retain’:
arc.m:160:13: warning: taking address of expression of type ‘void’ [enabled by default]
  if ((Class)&_NSConcreteMallocBlock == cls)
             ^
In file included from arc.m:420:0:
hash_table.h: In function ‘weak_ref_table_get_cell’:
hash_table.h:374:3: warning: passing argument 1 of ‘weak_ref_compare’ discards ‘const’ qualifier from pointer target type [enabled by default]
   if (MAP_TABLE_COMPARE_FUNCTION(key, cell->value))
   ^
arc.m:388:12: note: expected ‘id’ but argument is of type ‘const void *’
 static int weak_ref_compare(const id obj, const WeakRef weak_ref)
            ^
In file included from arc.m:420:0:
hash_table.h:383:4: warning: passing argument 1 of ‘weak_ref_compare’ discards ‘const’ qualifier from pointer target type [enabled by default]
    if (MAP_TABLE_COMPARE_FUNCTION(key, hopCell->value))
    ^
arc.m:388:12: note: expected ‘id’ but argument is of type ‘const void *’
 static int weak_ref_compare(const id obj, const WeakRef weak_ref)
            ^
arc.m: In function ‘objc_storeWeak’:
arc.m:462:6: warning: taking address of expression of type ‘void’ [enabled by default]
  if (&_NSConcreteGlobalBlock == cls)
      ^
arc.m:471:6: warning: taking address of expression of type ‘void’ [enabled by default]
  if (&_NSConcreteMallocBlock == cls)
      ^
arc.m: In function ‘objc_loadWeakRetained’:
arc.m:561:6: warning: taking address of expression of type ‘void’ [enabled by default]
  if (&_NSConcreteMallocBlock == cls)
      ^
 Compiling file associate.m ...
 Compiling file blocks_runtime.m ...
blocks_runtime.m: In function ‘_Block_copy’:
blocks_runtime.m:258:18: warning: taking address of expression of type ‘void’ [enabled by default]
  if(self->isa == &_NSConcreteStackBlock)
                  ^
blocks_runtime.m:262:14: warning: taking address of expression of type ‘void’ [enabled by default]
   ret->isa = &_NSConcreteMallocBlock;
              ^
blocks_runtime.m:272:24: warning: taking address of expression of type ‘void’ [enabled by default]
  else if (self->isa == &_NSConcreteMallocBlock)
                        ^
blocks_runtime.m: In function ‘_Block_release’:
blocks_runtime.m:290:6: warning: taking address of expression of type ‘void’ [enabled by default]
  if (&_NSConcreteStackBlock == self->isa)
      ^
blocks_runtime.m:294:11: warning: taking address of expression of type ‘void’ [enabled by default]
  else if (&_NSConcreteMallocBlock == self->isa)
           ^
 Compiling file mutation.m ...
 Compiling file properties.m ...
 Compiling file objc_msgSend.S ...
gcc: error: unrecognized command line option ‘-no-integrated-as’
make[3]: *** [obj/libobjc.obj/objc_msgSend.S.o] Error 1
make[2]: *** [internal-library-all_] Error 2
make[1]: *** [libobjc.all.library.variables] Error 2
make: *** [internal-all] Error 2
